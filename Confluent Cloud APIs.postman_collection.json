{
	"info": {
		"_postman_id": "98e8e92b-f172-4ae1-a556-ac97a2f8d594",
		"name": "Confluent Cloud APIs",
		"description": "This is an inofficial Confluent Cloud API collection for the Postman.  \nIt is based on the OpenAPI specification released by Confluent, see [https://docs.confluent.io/cloud/current](https://docs.confluent.io/cloud/current).\n\nCAUTION: Everything contained in this repository is not supported by Confluent.\n\nDISCLAIMER AND WARNING: You use this code at your own risk! Please do not use it for production systems. The author may not be held responsible for any harm caused by this code!\n\nHow to use:  \nCreate an environment and add it to this collection, providing the following variables (note: variables names are case-sensitive!):\n\nCONFLUENT_CLOUD_API_KEY=\n\nCONFLUENT_CLOUD_API_SECRET=\n\nCONFLUENT_CLOUD_CLUSTER_API_ENDPOINT=\n\nCONFLUENT_CLOUD_CLUSTER_API_ENDPOINT=\n\nCONFLUENT_CLOUD_CLUSTER_API_KEY=\n\nCONFLUENT_CLOUD_CLUSTER_API_SECRET=\n\nCONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT=\n\nCONFLUENT_CLOUD_STREAM_GOVERNANCE_API_KEY=\n\nCONFLUENT_CLOUD_STREAM_GOVERNANCE_API_SECRET=",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26587804",
		"_collection_link": "https://www.postman.com/confluentcloudunofficial/workspace/confluent-cloud-inofficial/collection/26587804-98e8e92b-f172-4ae1-a556-ac97a2f8d594?action=share&source=collection_link&creator=26587804"
	},
	"item": [
		{
			"name": "Identity Access Management (v2)",
			"item": [
				{
					"name": "API Keys (iam/v2)",
					"item": [
						{
							"name": "List of API Keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/api-keys",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"api-keys"
									],
									"query": [
										{
											"key": "spec.owner",
											"value": "",
											"disabled": true
										},
										{
											"key": "spec.resource",
											"value": "",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an API Key",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/api-keys",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"api-keys"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an API Key",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/api-keys/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"api-keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an API Key",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"ApiKey\",\n  \"id\": \"dlz-f3a90de\",\n  \"spec\": {\n    \"display_name\": \"CI kafka access key\",\n    \"description\": \"This API key provides kafka access to cluster x\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/api-keys/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"api-keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an API Key",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/api-keys/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"api-keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Users (iam/v2)",
					"item": [
						{
							"name": "List of Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/users?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/users/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a User",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"User\",\n  \"id\": \"dlz-f3a90de\",\n  \"full_name\": \"Marty McFly\",\n  \"auth_type\": \"AUTH_TYPE_SSO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/users/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a User",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/users/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Accounts (iam/v2)",
					"item": [
						{
							"name": "List of Service Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/service-accounts?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"service-accounts"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Service Account",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/service-accounts",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"service-accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Service Account",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/service-accounts/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"service-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Service Account",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"ServiceAccount\",\n  \"id\": \"dlz-f3a90de\",\n  \"description\": \"Doc's repair bot for the DeLorean\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/service-accounts/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"service-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Service Account",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/service-accounts/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"service-accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invitations (iam/v2)",
					"item": [
						{
							"name": "List of Invitations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/invitations?email=johndoe@confluent.io&status=INVITE_STATUS_SENT&user=&creator=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"invitations"
									],
									"query": [
										{
											"key": "email",
											"value": "johndoe@confluent.io"
										},
										{
											"key": "status",
											"value": "INVITE_STATUS_SENT"
										},
										{
											"key": "user",
											"value": ""
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Invitation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/invitations",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"invitations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Invitation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/invitations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"invitations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Invitation",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/invitations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"invitations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Role Bindings (iam/v2)",
					"item": [
						{
							"name": "List of Role Bindings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/role-bindings?principal=&role_name=CloudClusterAdmin&crn_pattern=&page_size=100&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"role-bindings"
									],
									"query": [
										{
											"key": "principal",
											"value": ""
										},
										{
											"key": "role_name",
											"value": "CloudClusterAdmin"
										},
										{
											"key": "crn_pattern",
											"value": "",
											"description": "crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-aaa1111/cloud-cluster=lkc-1111aaa"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Role Binding",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/role-bindings",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"role-bindings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Role Binding",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/role-bindings/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"role-bindings",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Role Binding",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/role-bindings/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"role-bindings",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Identity Providers (iam/v2)",
					"item": [
						{
							"name": "List of Identity Providers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Identity Provider",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Identity Provider",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Identity Provider",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"IdentityProvider\",\n  \"id\": \"dlz-f3a90de\",\n  \"display_name\": \"My OIDC Provider\",\n  \"description\": \"thunder\",\n  \"state\": \"ENABLED\",\n  \"keys\": [\n    {\n      \"kty\": \"RSA\",\n      \"kid\": \"nOo3ZDrODXEK1jKWhXslHR_KXEg\",\n      \"alg\": \"RS256\",\n      \"use\": \"sig\",\n      \"n\": \"thunder\",\n      \"e\": \"AQAB\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Identity Provider",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Jwks (iam/v2)",
					"item": [
						{
							"name": "Refresh a provider's JWKS",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"Jwks\",\n  \"spec\": {\n    \"jwks_status\": \"REFRESHED\"\n  },\n  \"status\": {\n    \"jwks_status\": \"REFRESHED\",\n    \"jwks_last_refresh_at\": \"2006-01-02T15:04:05-07:00\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/jwks",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"jwks"
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Identity Pools (iam/v2)",
					"item": [
						{
							"name": "List of Identity Pools",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/identity-pools?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"identity-pools"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Identity Pool",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/identity-pools",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"identity-pools"
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Identity Pool",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/identity-pools/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"identity-pools",
										":id"
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Identity Pool",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"iam/v2\",\n  \"kind\": \"IdentityPool\",\n  \"id\": \"dlz-f3a90de\",\n  \"display_name\": \"My Identity Pool\",\n  \"description\": \"Prod Access to Kafka clusters to Release Engineering\",\n  \"identity_claim\": \"claims.sub\",\n  \"filter\": \"claims.aud==\\\"confluent\\\" && claims.group!=\\\"invalid_group\\\"\",\n  \"principal\": \"pool-abc\",\n  \"state\": \"ENABLED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/identity-pools/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"identity-pools",
										":id"
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Identity Pool",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/iam/v2/identity-providers/:provider_id/identity-pools/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"iam",
										"v2",
										"identity-providers",
										":provider_id",
										"identity-pools",
										":id"
									],
									"variable": [
										{
											"key": "provider_id",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Org API (v2)",
			"item": [
				{
					"name": "Environments (org/v2)",
					"item": [
						{
							"name": "List of Environments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/environments?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"environments"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Environment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/environments",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"environments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/environments/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Environment",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"org/v2\",\n  \"kind\": \"Environment\",\n  \"id\": \"dlz-f3a90de\",\n  \"display_name\": \"prod-finance01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/environments/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Environment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/environments/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Organizations (org/v2)",
					"item": [
						{
							"name": "List of Organizations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/organizations?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"organizations"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Organization",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/organizations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Organization",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"org/v2\",\n  \"kind\": \"Organization\",\n  \"id\": \"dlz-f3a90de\",\n  \"display_name\": \"Finance Org\",\n  \"jit_enabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/org/v2/organizations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"org",
										"v2",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Notifications API (v1)",
			"item": [
				{
					"name": "Subscriptions (notifications/v1)",
					"item": [
						{
							"name": "List of Subscriptions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/subscriptions?page_size=100&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"subscriptions"
									],
									"query": [
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Subscription",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/subscriptions",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"subscriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Subscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/subscriptions/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Subscription",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"notifications/v1\",\n  \"kind\": \"Subscription\",\n  \"id\": \"dlz-f3a90de\",\n  \"current_state\": \"ENABLED\",\n  \"integrations\": [\n    {\n      \"id\": \"thunder\",\n      \"related\": \"thunder\",\n      \"resource_name\": \"thunder\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/subscriptions/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Subscription",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/subscriptions/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Integrations (notifications/v1)",
					"item": [
						{
							"name": "List of Integrations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations?page_size=100&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations"
									],
									"query": [
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Integration",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Integration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Integration",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"notifications/v1\",\n  \"kind\": \"Integration\",\n  \"id\": \"dlz-f3a90de\",\n  \"display_name\": \"Slack integration\",\n  \"description\": \"A Slack channel integration\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Integration",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Test a Webhook, Slack or Microsoft Teams integration",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/integrations:test",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"integrations:test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification Types (notifications/v1)",
					"item": [
						{
							"name": "List of Notification Types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/notification-types?page_size=100&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"notification-types"
									],
									"query": [
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Notification Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/notifications/v1/notification-types/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"notifications",
										"v1",
										"notification-types",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cluster Management for Kafka (v2)",
			"item": [
				{
					"name": "Clusters (cmk/v2)",
					"item": [
						{
							"name": "List of Clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cmk/v2/clusters?environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cmk",
										"v2",
										"clusters"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Cluster",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cmk/v2/clusters",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cmk",
										"v2",
										"clusters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cmk/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cmk",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Cluster",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cmk/v2/clusters/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cmk",
										"v2",
										"clusters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Cluster",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cmk/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cmk",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cluster Management for kSQLDB (v2)",
			"item": [
				{
					"name": "Clusters (ksqldbcm/v2)",
					"item": [
						{
							"name": "List of Clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/ksqldbcm/v2/clusters?environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"ksqldbcm",
										"v2",
										"clusters"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Cluster",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/ksqldbcm/v2/clusters",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"ksqldbcm",
										"v2",
										"clusters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/ksqldbcm/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"ksqldbcm",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Cluster",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/ksqldbcm/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"ksqldbcm",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Connect API (v1)",
			"item": [
				{
					"name": "Connectors (v1)",
					"item": [
						{
							"name": "List of Connectors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Connector",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"thunder\",\n  \"config\": {\n    \"connector.class\": \"thunder\",\n    \"name\": \"thunder\",\n    \"kafka.api.key\": \"thunder\",\n    \"kafka.api.secret\": \"thunder\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List of Connectors with Expansions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors?expand=id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors"
									],
									"query": [
										{
											"key": "expand",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Connector Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/config",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"config"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create or Update a Connector Configuration",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connector.class\": \"thunder\",\n  \"name\": \"thunder\",\n  \"kafka.api.key\": \"thunder\",\n  \"kafka.api.secret\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/config",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"config"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Connector",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Connector",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Lifecycle (v1)",
					"item": [
						{
							"name": "Pause a Connector",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/pause",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"pause"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resume a Connector",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/resume",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"resume"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Status (v1)",
					"item": [
						{
							"name": "Read a Connector Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/status",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"status"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List of Connector Tasks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connectors/:connector_name/tasks",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connectors",
										":connector_name",
										"tasks"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "connector_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Plugins (v1)",
					"item": [
						{
							"name": "List of Connector Plugins",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connector-plugins",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connector-plugins"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate a Connector Plugin",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/connect/v1/environments/:environment_id/clusters/:kafka_cluster_id/connector-plugins/:plugin_name/config/validate",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"connect",
										"v1",
										"environments",
										":environment_id",
										"clusters",
										":kafka_cluster_id",
										"connector-plugins",
										":plugin_name",
										"config",
										"validate"
									],
									"variable": [
										{
											"key": "environment_id",
											"value": ""
										},
										{
											"key": "kafka_cluster_id",
											"value": ""
										},
										{
											"key": "plugin_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Kafka API (v3)",
			"item": [
				{
					"name": "Cluster (v3)",
					"item": [
						{
							"name": "Get Cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Configs (v3)",
					"item": [
						{
							"name": "List Dynamic Broker Configs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/broker-configs",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"broker-configs"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batch Alter Dynamic Broker Configs",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\",\n      \"operation\": \"thunder\"\n    }\n  ],\n  \"validate_only\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/broker-configs:alter",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"broker-configs:alter"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Dynamic Broker Config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/broker-configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"broker-configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Dynamic Broker Config",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/broker-configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"broker-configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Dynamic Broker Config",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/broker-configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"broker-configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Topic Configs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/configs",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"configs"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batch Alter Topic Configs",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\",\n      \"operation\": \"thunder\"\n    }\n  ],\n  \"validate_only\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/configs:alter",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"configs:alter"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Topic Config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Topic Config",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Topic Config",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/configs/:name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"configs",
										":name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										},
										{
											"key": "name",
											"value": "compression.type"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List All Topic Configs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/-/configs",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										"-",
										"configs"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List New Topic Default Configs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/default-configs",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"default-configs"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ACL (v3)",
					"item": [
						{
							"name": "Batch Create ACLs",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/acls:batch",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"acls:batch"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List ACLs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/acls?resource_type=UNKNOWN&resource_name=&pattern_type=&principal=&host=&operation=&permission=",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"acls"
									],
									"query": [
										{
											"key": "resource_type",
											"value": "UNKNOWN"
										},
										{
											"key": "resource_name",
											"value": ""
										},
										{
											"key": "pattern_type",
											"value": ""
										},
										{
											"key": "principal",
											"value": ""
										},
										{
											"key": "host",
											"value": ""
										},
										{
											"key": "operation",
											"value": ""
										},
										{
											"key": "permission",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an ACL",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resource_type\": {},\n  \"resource_name\": \"thunder\",\n  \"pattern_type\": {},\n  \"principal\": \"thunder\",\n  \"host\": \"thunder\",\n  \"operation\": {},\n  \"permission\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/acls",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"acls"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete ACLs",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/acls?resource_type=UNKNOWN&resource_name=&pattern_type=&principal=&host=&operation=&permission=",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"acls"
									],
									"query": [
										{
											"key": "resource_type",
											"value": "UNKNOWN"
										},
										{
											"key": "resource_name",
											"value": ""
										},
										{
											"key": "pattern_type",
											"value": ""
										},
										{
											"key": "principal",
											"value": ""
										},
										{
											"key": "host",
											"value": ""
										},
										{
											"key": "operation",
											"value": ""
										},
										{
											"key": "permission",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Consumer Group (v3)",
					"item": [
						{
							"name": "List Consumer Groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Consumer Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Consumers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id/consumers",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id",
										"consumers"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Consumer Group Lag Summary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id/lag-summary",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id",
										"lag-summary"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Consumer Lags",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id/lags",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id",
										"lags"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Consumer Lag",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id/lags/:topic_name/partitions/:partition_id",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id",
										"lags",
										":topic_name",
										"partitions",
										":partition_id"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										},
										{
											"key": "partition_id",
											"value": "21"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Consumer",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/consumer-groups/:consumer_group_id/consumers/:consumer_id",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"consumer-groups",
										":consumer_group_id",
										"consumers",
										":consumer_id"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "consumer_group_id",
											"value": ""
										},
										{
											"key": "consumer_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Partition (v3)",
					"item": [
						{
							"name": "List Partitions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/partitions",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"partitions"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Partition",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/partitions/:partition_id",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"partitions",
										":partition_id"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										},
										{
											"key": "partition_id",
											"value": "13"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Topic (v3)",
					"item": [
						{
							"name": "List Topics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Topic",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topic_name\": \"thunder\",\n  \"partitions_count\": 29,\n  \"replication_factor\": 15,\n  \"configs\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\"\n    }\n  ],\n  \"validate_only\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Topic",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name?include_authorized_operations=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name"
									],
									"query": [
										{
											"key": "include_authorized_operations",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Partition Count",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"partitions_count\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Topic",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Records (v3)",
					"item": [
						{
							"name": "Produce Records",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"partition_id\": 18,\n  \"headers\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\"\n    }\n  ],\n  \"key\": {\n    \"type\": \"thunder\",\n    \"data\": {}\n  },\n  \"value\": {\n    \"type\": \"thunder\",\n    \"data\": {}\n  },\n  \"timestamp\": \"2023-08-10T09:47:14.815Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/topics/:topic_name/records",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"topics",
										":topic_name",
										"records"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cluster Linking (v3)",
					"item": [
						{
							"name": "List all cluster links in the dest cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a cluster link",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source_cluster_id\": \"thunder\",\n  \"destination_cluster_id\": \"thunder\",\n  \"remote_cluster_id\": \"thunder\",\n  \"cluster_link_id\": \"thunder\",\n  \"configs\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links?link_name=&validate_only=true&validate_link=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links"
									],
									"query": [
										{
											"key": "link_name",
											"value": ""
										},
										{
											"key": "validate_only",
											"value": "true"
										},
										{
											"key": "validate_link",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Describe the cluster link",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete the cluster link",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name?force=true&validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name"
									],
									"query": [
										{
											"key": "force",
											"value": "true"
										},
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List all configs of the cluster link",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/configs",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"configs"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Describe the config under the cluster link",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/configs/:config_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"configs",
										":config_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										},
										{
											"key": "config_name",
											"value": "consumer.offset.sync.enable"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Alter the config under the cluster link",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/configs/:config_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"configs",
										":config_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										},
										{
											"key": "config_name",
											"value": "consumer.offset.sync.enable"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset the given config to default value",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/configs/:config_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"configs",
										":config_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										},
										{
											"key": "config_name",
											"value": "consumer.offset.sync.enable"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batch Alter Cluster Link Configs",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\",\n      \"operation\": \"thunder\"\n    }\n  ],\n  \"validate_only\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/configs:alter?validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"configs:alter"
									],
									"query": [
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a mirror topic",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source_topic_name\": \"thunder\",\n  \"mirror_topic_name\": \"thunder\",\n  \"replication_factor\": 61,\n  \"configs\": [\n    {\n      \"name\": \"thunder\",\n      \"value\": \"thunder\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List mirror topics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors?mirror_status=ACTIVE",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors"
									],
									"query": [
										{
											"key": "mirror_status",
											"value": "ACTIVE"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List mirror topics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/-/mirrors?mirror_status=ACTIVE",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										"-",
										"mirrors"
									],
									"query": [
										{
											"key": "mirror_status",
											"value": "ACTIVE"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Describe the mirror topic",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors/:mirror_topic_name",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors",
										":mirror_topic_name"
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										},
										{
											"key": "mirror_topic_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote the mirror topics",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mirror_topic_names\": [\n    \"thunder\"\n  ],\n  \"mirror_topic_name_pattern\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors:promote?validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors:promote"
									],
									"query": [
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Failover the mirror topics",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mirror_topic_names\": [\n    \"thunder\"\n  ],\n  \"mirror_topic_name_pattern\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors:failover?validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors:failover"
									],
									"query": [
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause the mirror topics",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mirror_topic_names\": [\n    \"thunder\"\n  ],\n  \"mirror_topic_name_pattern\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors:pause?validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors:pause"
									],
									"query": [
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resume the mirror topics",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mirror_topic_names\": [\n    \"thunder\"\n  ],\n  \"mirror_topic_name_pattern\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}/kafka/v3/clusters/:cluster_id/links/:link_name/mirrors:resume?validate_only=true",
									"host": [
										"{{CONFLUENT_CLOUD_CLUSTER_API_ENDPOINT}}"
									],
									"path": [
										"kafka",
										"v3",
										"clusters",
										":cluster_id",
										"links",
										":link_name",
										"mirrors:resume"
									],
									"query": [
										{
											"key": "validate_only",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "cluster_id",
											"value": ""
										},
										{
											"key": "link_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{CONFLUENT_CLOUD_CLUSTER_API_SECRET}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{CONFLUENT_CLOUD_CLUSTER_API_KEY}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Service Quota API (v1)",
			"item": [
				{
					"name": "Applied Quotas (service-quota/v1)",
					"item": [
						{
							"name": "List of Applied Quotas",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/service-quota/v1/applied-quotas?scope=ORGANIZATION&environment=&network=&kafka_cluster=&id=iam.max_environments.per_org&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"service-quota",
										"v1",
										"applied-quotas"
									],
									"query": [
										{
											"key": "scope",
											"value": "ORGANIZATION"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "network",
											"value": ""
										},
										{
											"key": "kafka_cluster",
											"value": ""
										},
										{
											"key": "id",
											"value": "iam.max_environments.per_org"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Applied Quota",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/service-quota/v1/applied-quotas/:id?environment=&network=&kafka_cluster=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"service-quota",
										"v1",
										"applied-quotas",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "network",
											"value": ""
										},
										{
											"key": "kafka_cluster",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scopes (service-quota/v1)",
					"item": [
						{
							"name": "List of Scopes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/service-quota/v1/scopes?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"service-quota",
										"v1",
										"scopes"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Scope",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/service-quota/v1/scopes/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"service-quota",
										"v1",
										"scopes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Partner API (v2)",
			"item": [
				{
					"name": "Entitlements (partner/v2)",
					"item": [
						{
							"name": "List of Entitlements",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/entitlements?organization.id=&page_size=10",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"entitlements"
									],
									"query": [
										{
											"key": "organization.id",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Entitlement",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/entitlements",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"entitlements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Entitlement",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/entitlements/:id?organization.id=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"entitlements",
										":id"
									],
									"query": [
										{
											"key": "organization.id",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Organizations (partner/v2)",
					"item": [
						{
							"name": "Read an Organization",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/organizations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List of Organizations",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/organizations?page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"organizations"
									],
									"query": [
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Signup (partner/v2)",
					"item": [
						{
							"name": "Signup an Organization on behalf of a Customer",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/signup?dry_run=true",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"signup"
									],
									"query": [
										{
											"key": "dry_run",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate an Incomplete Signup",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"organization_id\": \"b3a17773-05cc-4431-9560-433fb4613da8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/signup/activate",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"signup",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Signup a Customer by Linking to an Existing Organization",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "{{CLIENTID}}",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "{{CLIENTSECRET}}",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "/oauth2/token",
											"type": "string"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "state",
											"type": "any"
										},
										{
											"key": "scope",
											"value": "partner:alter partner:create partner:delete partner:describe",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"type": "any"
										},
										{
											"key": "code_verifier",
											"type": "any"
										},
										{
											"key": "challengeAlgorithm",
											"type": "any"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<The linking token that was generated>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/partner/v2/signup/link?dry_run=true",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"partner",
										"v2",
										"signup",
										"link"
									],
									"query": [
										{
											"key": "dry_run",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cluster Management for Schema Registry (v2)",
			"item": [
				{
					"name": "Regions (srcm/v2)",
					"item": [
						{
							"name": "List of Regions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/regions?spec.cloud=AWS&spec.region_name=&spec.packages=ESSENTIALS,ADVANCED&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"regions"
									],
									"query": [
										{
											"key": "spec.cloud",
											"value": "AWS"
										},
										{
											"key": "spec.region_name",
											"value": ""
										},
										{
											"key": "spec.packages",
											"value": "ESSENTIALS,ADVANCED"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Region",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/regions/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"regions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Clusters (srcm/v2)",
					"item": [
						{
							"name": "List of Clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/clusters?environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"clusters"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Cluster",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/clusters",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"clusters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Cluster",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/clusters/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"clusters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Cluster",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/srcm/v2/clusters/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"srcm",
										"v2",
										"clusters",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Schema Registry API (v1)",
			"item": [
				{
					"name": "Compatibility (v1)",
					"item": [
						{
							"name": "Test schema compatibility against a particular schema subject-version",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\": 6,\n  \"id\": 0,\n  \"schemaType\": \"thunder\",\n  \"references\": [\n    {\n      \"name\": \"io.confluent.kafka.example.User\",\n      \"subject\": \"User\",\n      \"version\": 1\n    }\n  ],\n  \"schema\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/compatibility/subjects/:subject/versions/:version?verbose=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"compatibility",
										"subjects",
										":subject",
										"versions",
										":version"
									],
									"query": [
										{
											"key": "verbose",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "version",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Test schema compatibility against all schemas under a subject",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\": 35,\n  \"id\": 64,\n  \"schemaType\": \"thunder\",\n  \"references\": [\n    {\n      \"name\": \"io.confluent.kafka.example.User\",\n      \"subject\": \"User\",\n      \"version\": 1\n    }\n  ],\n  \"schema\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/compatibility/subjects/:subject/versions?verbose=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"compatibility",
										"subjects",
										":subject",
										"versions"
									],
									"query": [
										{
											"key": "verbose",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Config (v1)",
					"item": [
						{
							"name": "Get cluster config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/clusterconfig",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"clusterconfig"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subject compatibility level",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config/:subject?defaultToGlobal=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config",
										":subject"
									],
									"query": [
										{
											"key": "defaultToGlobal",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update subject compatibility level",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compatibility\": \"FULL_TRANSITIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config/:subject",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config",
										":subject"
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete subject compatibility level",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config/:subject",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config",
										":subject"
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get global compatibility level",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update global compatibility level",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"compatibility\": \"FULL_TRANSITIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete global compatibility level",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/config",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contexts (v1)",
					"item": [
						{
							"name": "List contexts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/contexts",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"contexts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Exporters (v1)",
					"item": [
						{
							"name": "Gets all schema exporters.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Creates a new schema exporter.",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"test-exporter\",\n  \"contextType\": \"CUSTOM\",\n  \"context\": \"User\",\n  \"subjects[i]\": \"[\\\"foo\\\"]\",\n  \"subjectRenameFormat\": \"thunder\",\n  \"config\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Gets schema exporter by name.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update schema exporter by name.",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contextType\": \"CUSTOM\",\n  \"context\": \"test-context\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete schema exporter by name.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Gets schema exporter status by name.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/status",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"status"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Gets schema exporter config by name.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/config",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"config"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update schema exporter config by name.",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schema.registry.url\": \"<Physical SR Endpoint>\",\n  \"basic.auth.credentials.source\": \"USER_INFO\",\n  \"basic.auth.user.info\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/config",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"config"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause schema exporter by name.",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/pause",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"pause"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset schema exporter by name.",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/reset",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"reset"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resume schema exporter by name.",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/exporters/:name/resume",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"exporters",
										":name",
										"resume"
									],
									"variable": [
										{
											"key": "name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Modes (v1)",
					"item": [
						{
							"name": "Get subject mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/mode/:subject?defaultToGlobal=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"mode",
										":subject"
									],
									"query": [
										{
											"key": "defaultToGlobal",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": "",
											"description": "-value"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update subject mode",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mode\": \"READWRITE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/mode/:subject?force=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"mode",
										":subject"
									],
									"query": [
										{
											"key": "force",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete subject mode",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/mode/:subject",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"mode",
										":subject"
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get global mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/mode",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"mode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update global mode",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mode\": \"READWRITE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/mode?force=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"mode"
									],
									"query": [
										{
											"key": "force",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schemas (v1)",
					"item": [
						{
							"name": "Get schema string by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas/ids/:id?subject=&fetchMaxId=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas",
										"ids",
										":id"
									],
									"query": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "format",
											"value": "",
											"disabled": true
										},
										{
											"key": "fetchMaxId",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "100001"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get schema by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas/ids/:id/schema?subject=&format=",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas",
										"ids",
										":id",
										"schema"
									],
									"query": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "format",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "55"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List supported schema types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas/types",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas",
										"types"
									]
								}
							},
							"response": []
						},
						{
							"name": "List schemas",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas?latestOnly=false",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas"
									],
									"query": [
										{
											"key": "subjectPrefix",
											"value": "",
											"disabled": true
										},
										{
											"key": "deleted",
											"value": "false",
											"disabled": true
										},
										{
											"key": "latestOnly",
											"value": "false"
										},
										{
											"key": "offset",
											"value": "10",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List subjects associated to schema ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas/ids/:id/subjects?deleted=false",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas",
										"ids",
										":id",
										"subjects"
									],
									"query": [
										{
											"key": "subject",
											"value": "",
											"disabled": true
										},
										{
											"key": "deleted",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List subject-versions associated to schema ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/schemas/ids/:id/versions?subject=&deleted=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"schemas",
										"ids",
										":id",
										"versions"
									],
									"query": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "deleted",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Subjects (v1)",
					"item": [
						{
							"name": "Get schema by version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions/:version?deleted=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":version"
									],
									"query": [
										{
											"key": "deleted",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "version",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete schema version",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions/:version?permanent=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":version"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "version",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List schemas referencing a schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions/:version/referencedby",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":version",
										"referencedby"
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "version",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get schema string by version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions/:version/schema?deleted=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions",
										":version",
										"schema"
									],
									"query": [
										{
											"key": "deleted",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										},
										{
											"key": "version",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List versions under subject",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions?deleted=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions"
									],
									"query": [
										{
											"key": "deleted",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Register schema under a subject",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\": 56,\n  \"id\": 73,\n  \"schemaType\": \"thunder\",\n  \"references\": [\n    {\n      \"name\": \"io.confluent.kafka.example.User\",\n      \"subject\": \"User\",\n      \"version\": 1\n    }\n  ],\n  \"schema\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject/versions?normalize=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject",
										"versions"
									],
									"query": [
										{
											"key": "normalize",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Lookup schema under subject",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\": 44,\n  \"id\": 75,\n  \"schemaType\": \"thunder\",\n  \"references\": [\n    {\n      \"name\": \"io.confluent.kafka.example.User\",\n      \"subject\": \"User\",\n      \"version\": 1\n    }\n  ],\n  \"schema\": \"thunder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject?normalize=true&deleted=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject"
									],
									"query": [
										{
											"key": "normalize",
											"value": "true"
										},
										{
											"key": "deleted",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete subject",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects/:subject?permanent=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects",
										":subject"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "subject",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List subjects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/subjects?deleted=false",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"subjects"
									],
									"query": [
										{
											"key": "subjectPrefix",
											"value": ":*:",
											"disabled": true
										},
										{
											"key": "deleted",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Catalog API (1)",
			"item": [
				{
					"name": "Entity (v1)",
					"item": [
						{
							"name": "Bulk Create Business Metadata",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"typeName\": \"thunder\",\n    \"attributes\": {},\n    \"entityType\": \"thunder\",\n    \"entityName\": \"thunder\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/businessmetadata",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"businessmetadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Update Business Metadata",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"typeName\": \"thunder\",\n    \"attributes\": {},\n    \"entityType\": \"thunder\",\n    \"entityName\": \"thunder\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/businessmetadata",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"businessmetadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Business Metadata for an Entity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/type/:typeName/name/:qualifiedName/businessmetadata",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"type",
										":typeName",
										"name",
										":qualifiedName",
										"businessmetadata"
									],
									"variable": [
										{
											"key": "typeName",
											"value": ""
										},
										{
											"key": "qualifiedName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Business Metadata for an Entity",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/type/:typeName/name/:qualifiedName/businessmetadata/:bmName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"type",
										":typeName",
										"name",
										":qualifiedName",
										"businessmetadata",
										":bmName"
									],
									"variable": [
										{
											"key": "typeName",
											"value": ""
										},
										{
											"key": "qualifiedName",
											"value": ""
										},
										{
											"key": "bmName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Update Tags",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"typeName\": \"thunder\",\n    \"attributes\": {},\n    \"entityGuid\": \"thunder\",\n    \"entityStatus\": \"ACTIVE\",\n    \"propagate\": true,\n    \"validityPeriods\": [\n      {\n        \"startTime\": \"thunder\",\n        \"endTime\": \"thunder\",\n        \"timeZone\": \"thunder\"\n      }\n    ],\n    \"removePropagationsOnEntityDelete\": true,\n    \"entityType\": \"thunder\",\n    \"entityName\": \"thunder\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/tags",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Create Tags",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"typeName\": \"thunder\",\n    \"attributes\": {},\n    \"entityGuid\": \"thunder\",\n    \"entityStatus\": \"ACTIVE\",\n    \"propagate\": true,\n    \"validityPeriods\": [\n      {\n        \"startTime\": \"thunder\",\n        \"endTime\": \"thunder\",\n        \"timeZone\": \"thunder\"\n      }\n    ],\n    \"removePropagationsOnEntityDelete\": true,\n    \"entityType\": \"thunder\",\n    \"entityName\": \"thunder\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/tags",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read an Entity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/type/:typeName/name/:qualifiedName?minExtInfo=true&ignoreRelationships=true",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"type",
										":typeName",
										"name",
										":qualifiedName"
									],
									"query": [
										{
											"key": "minExtInfo",
											"value": "true"
										},
										{
											"key": "ignoreRelationships",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "typeName",
											"value": ""
										},
										{
											"key": "qualifiedName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Tags for an Entity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/type/:typeName/name/:qualifiedName/tags",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"type",
										":typeName",
										"name",
										":qualifiedName",
										"tags"
									],
									"variable": [
										{
											"key": "typeName",
											"value": ""
										},
										{
											"key": "qualifiedName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Entity Attribute",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"referredEntities\": {},\n  \"entity\": {\n    \"typeName\": \"thunder\",\n    \"attributes\": {},\n    \"guid\": \"thunder\",\n    \"homeId\": \"thunder\",\n    \"isProxy\": true,\n    \"isIncomplete\": true,\n    \"provenanceType\": 37,\n    \"status\": \"ACTIVE\",\n    \"createdBy\": \"thunder\",\n    \"updatedBy\": \"thunder\",\n    \"createTime\": 57,\n    \"updateTime\": 19,\n    \"version\": 57,\n    \"relationshipAttributes\": {},\n    \"classifications\": [\n      {\n        \"typeName\": \"thunder\",\n        \"attributes\": {},\n        \"entityGuid\": \"thunder\",\n        \"entityStatus\": \"ACTIVE\",\n        \"propagate\": true,\n        \"validityPeriods\": [\n          {\n            \"startTime\": \"thunder\",\n            \"endTime\": \"thunder\",\n            \"timeZone\": \"thunder\"\n          }\n        ],\n        \"removePropagationsOnEntityDelete\": true\n      }\n    ],\n    \"meanings\": [\n      {\n        \"termGuid\": \"thunder\",\n        \"relationGuid\": \"thunder\",\n        \"description\": \"thunder\",\n        \"displayText\": \"thunder\",\n        \"expression\": \"thunder\",\n        \"createdBy\": \"thunder\",\n        \"steward\": \"thunder\",\n        \"source\": \"thunder\",\n        \"confidence\": 36,\n        \"status\": \"DISCOVERED\"\n      }\n    ],\n    \"customAttributes\": {},\n    \"businessAttributes\": {},\n    \"labels\": [\n      \"thunder\"\n    ],\n    \"proxy\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Tag for an Entity",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/entity/type/:typeName/name/:qualifiedName/tags/:tagName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"entity",
										"type",
										":typeName",
										"name",
										":qualifiedName",
										"tags",
										":tagName"
									],
									"variable": [
										{
											"key": "typeName",
											"value": ""
										},
										{
											"key": "qualifiedName",
											"value": ""
										},
										{
											"key": "tagName",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search (v1)",
					"item": [
						{
							"name": "Search by Attribute",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/search/attribute?type=&attr=&attrName=&attrValuePrefix=&tag=&sortBy=&sortOrder=ASCENDING&deleted=true&limit=64&offset=14",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"search",
										"attribute"
									],
									"query": [
										{
											"key": "type",
											"value": ""
										},
										{
											"key": "attr",
											"value": ""
										},
										{
											"key": "attrName",
											"value": ""
										},
										{
											"key": "attrValuePrefix",
											"value": ""
										},
										{
											"key": "tag",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": ""
										},
										{
											"key": "sortOrder",
											"value": "ASCENDING"
										},
										{
											"key": "deleted",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "64"
										},
										{
											"key": "offset",
											"value": "14"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search by Fulltext Query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/search/basic?query=&type=&attr=&tag=&sortBy=&sortOrder=ASCENDING&deleted=true&limit=15&offset=41",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"search",
										"basic"
									],
									"query": [
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "type",
											"value": ""
										},
										{
											"key": "attr",
											"value": ""
										},
										{
											"key": "tag",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": ""
										},
										{
											"key": "sortOrder",
											"value": "ASCENDING"
										},
										{
											"key": "deleted",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "15"
										},
										{
											"key": "offset",
											"value": "41"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Types (v1)",
					"item": [
						{
							"name": "Bulk Read Business Metadata Definitions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/businessmetadatadefs?prefix=",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"businessmetadatadefs"
									],
									"query": [
										{
											"key": "prefix",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Create Business Metadata Definitions",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"category\": \"PRIMITIVE\",\n    \"guid\": \"thunder\",\n    \"createdBy\": \"thunder\",\n    \"updatedBy\": \"thunder\",\n    \"createTime\": 7,\n    \"updateTime\": 62,\n    \"version\": 10,\n    \"name\": \"thunder\",\n    \"description\": \"thunder\",\n    \"typeVersion\": \"thunder\",\n    \"serviceType\": \"thunder\",\n    \"options\": {},\n    \"attributeDefs\": [\n      {\n        \"name\": \"thunder\",\n        \"typeName\": \"thunder\",\n        \"isOptional\": true,\n        \"cardinality\": \"SINGLE\",\n        \"valuesMinCount\": 91,\n        \"valuesMaxCount\": 23,\n        \"isUnique\": true,\n        \"isIndexable\": true,\n        \"includeInNotification\": true,\n        \"defaultValue\": \"thunder\",\n        \"description\": \"thunder\",\n        \"searchWeight\": 26,\n        \"indexType\": \"DEFAULT\",\n        \"constraints\": [\n          {\n            \"type\": \"thunder\",\n            \"params\": {}\n          }\n        ],\n        \"options\": {},\n        \"displayName\": \"thunder\"\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/businessmetadatadefs",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"businessmetadatadefs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Update Business Metadata Definitions",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"category\": \"PRIMITIVE\",\n    \"guid\": \"thunder\",\n    \"createdBy\": \"thunder\",\n    \"updatedBy\": \"thunder\",\n    \"createTime\": 41,\n    \"updateTime\": 89,\n    \"version\": 69,\n    \"name\": \"thunder\",\n    \"description\": \"thunder\",\n    \"typeVersion\": \"thunder\",\n    \"serviceType\": \"thunder\",\n    \"options\": {},\n    \"attributeDefs\": [\n      {\n        \"name\": \"thunder\",\n        \"typeName\": \"thunder\",\n        \"isOptional\": true,\n        \"cardinality\": \"SINGLE\",\n        \"valuesMinCount\": 9,\n        \"valuesMaxCount\": 25,\n        \"isUnique\": true,\n        \"isIndexable\": true,\n        \"includeInNotification\": true,\n        \"defaultValue\": \"thunder\",\n        \"description\": \"thunder\",\n        \"searchWeight\": 49,\n        \"indexType\": \"DEFAULT\",\n        \"constraints\": [\n          {\n            \"type\": \"thunder\",\n            \"params\": {}\n          }\n        ],\n        \"options\": {},\n        \"displayName\": \"thunder\"\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/businessmetadatadefs",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"businessmetadatadefs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Business Metadata Definition",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/businessmetadatadefs/:bmName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"businessmetadatadefs",
										":bmName"
									],
									"variable": [
										{
											"key": "bmName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Business Metadata Definition",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/businessmetadatadefs/:bmName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"businessmetadatadefs",
										":bmName"
									],
									"variable": [
										{
											"key": "bmName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Read Tag Definitions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/tagdefs?prefix=",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"tagdefs"
									],
									"query": [
										{
											"key": "prefix",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Update Tag Definitions",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"category\": \"PRIMITIVE\",\n    \"guid\": \"thunder\",\n    \"createdBy\": \"thunder\",\n    \"updatedBy\": \"thunder\",\n    \"createTime\": 91,\n    \"updateTime\": 3,\n    \"version\": 63,\n    \"name\": \"thunder\",\n    \"description\": \"thunder\",\n    \"typeVersion\": \"thunder\",\n    \"serviceType\": \"thunder\",\n    \"options\": {},\n    \"attributeDefs\": [\n      {\n        \"name\": \"thunder\",\n        \"typeName\": \"thunder\",\n        \"isOptional\": true,\n        \"cardinality\": \"SINGLE\",\n        \"valuesMinCount\": 61,\n        \"valuesMaxCount\": 98,\n        \"isUnique\": true,\n        \"isIndexable\": true,\n        \"includeInNotification\": true,\n        \"defaultValue\": \"thunder\",\n        \"description\": \"thunder\",\n        \"searchWeight\": 64,\n        \"indexType\": \"DEFAULT\",\n        \"constraints\": [\n          {\n            \"type\": \"thunder\",\n            \"params\": {}\n          }\n        ],\n        \"options\": {},\n        \"displayName\": \"thunder\"\n      }\n    ],\n    \"superTypes\": [\n      \"thunder\"\n    ],\n    \"entityTypes\": [\n      \"thunder\"\n    ],\n    \"subTypes\": [\n      \"thunder\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/tagdefs",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"tagdefs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Create Tag Definitions",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"category\": \"PRIMITIVE\",\n    \"guid\": \"thunder\",\n    \"createdBy\": \"thunder\",\n    \"updatedBy\": \"thunder\",\n    \"createTime\": 51,\n    \"updateTime\": 56,\n    \"version\": 37,\n    \"name\": \"thunder\",\n    \"description\": \"thunder\",\n    \"typeVersion\": \"thunder\",\n    \"serviceType\": \"thunder\",\n    \"options\": {},\n    \"attributeDefs\": [\n      {\n        \"name\": \"thunder\",\n        \"typeName\": \"thunder\",\n        \"isOptional\": true,\n        \"cardinality\": \"SINGLE\",\n        \"valuesMinCount\": 36,\n        \"valuesMaxCount\": 23,\n        \"isUnique\": true,\n        \"isIndexable\": true,\n        \"includeInNotification\": true,\n        \"defaultValue\": \"thunder\",\n        \"description\": \"thunder\",\n        \"searchWeight\": 29,\n        \"indexType\": \"DEFAULT\",\n        \"constraints\": [\n          {\n            \"type\": \"thunder\",\n            \"params\": {}\n          }\n        ],\n        \"options\": {},\n        \"displayName\": \"thunder\"\n      }\n    ],\n    \"superTypes\": [\n      \"thunder\"\n    ],\n    \"entityTypes\": [\n      \"thunder\"\n    ],\n    \"subTypes\": [\n      \"thunder\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/tagdefs",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"tagdefs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Tag Definition",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/tagdefs/:tagName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"tagdefs",
										":tagName"
									],
									"variable": [
										{
											"key": "tagName",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Tag Definition",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}/catalog/v1/types/tagdefs/:tagName",
									"host": [
										"{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_ENDPOINT}}"
									],
									"path": [
										"catalog",
										"v1",
										"types",
										"tagdefs",
										":tagName"
									],
									"variable": [
										{
											"key": "tagName",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_SECRET}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{CONFLUENT_CLOUD_STREAM_GOVERNANCE_API_KEY}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Stream Sharing API (v1)",
			"item": [
				{
					"name": "Provider Shared Resources (cdx/v1)",
					"item": [
						{
							"name": "List of Provider Shared Resources",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources?stream_share=&crn=&include_deleted=true&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources"
									],
									"query": [
										{
											"key": "stream_share",
											"value": ""
										},
										{
											"key": "crn",
											"value": "",
											"description": "crn://confluent.cloud/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=my.topic"
										},
										{
											"key": "include_deleted",
											"value": "true"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Provider Shared Resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Provider Shared Resource",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"cdx/v1\",\n  \"kind\": \"ProviderSharedResource\",\n  \"id\": \"dlz-f3a90de\",\n  \"resources\": [\n    \"crn://confluent.cloud/environment=env-123/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=my.topic\"\n  ],\n  \"display_name\": \"Stock Trades\",\n  \"organization_description\": \"ABC Corp is the biggest online retailer\",\n  \"organization_contact\": \"jane.doe@example.com\",\n  \"logo_url\": \"https://confluent.cloud/api/cdx/v1/provider-shared-resources/sr-123/images/logo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload image for shared resource",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources/:id/images/:file_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources",
										":id",
										"images",
										":file_name"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "file_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get image for shared resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources/:id/images/:file_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources",
										":id",
										"images",
										":file_name"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "file_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete the shared resource's image",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shared-resources/:id/images/:file_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shared-resources",
										":id",
										"images",
										":file_name"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "file_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Provider Shares (cdx/v1)",
					"item": [
						{
							"name": "List of Provider Shares",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shares?shared_resource=&crn=&include_deleted=true&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shares"
									],
									"query": [
										{
											"key": "shared_resource",
											"value": ""
										},
										{
											"key": "crn",
											"value": "",
											"description": "crn://confluent.cloud/cloud-cluster=lkc-111aaa/kafka=lkc-111aaa/topic=my.topic"
										},
										{
											"key": "include_deleted",
											"value": "true"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a provider share",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shares",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shares"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Provider Share",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shares/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Provider Share",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shares/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/provider-shares/:id:resend",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"provider-shares",
										":id:resend"
									],
									"variable": [
										{
											"key": "id:resend",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Consumer Shared Resources (cdx/v1)",
					"item": [
						{
							"name": "List of Consumer Shared Resources",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shared-resources?stream_share=&include_deleted=true&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shared-resources"
									],
									"query": [
										{
											"key": "stream_share",
											"value": ""
										},
										{
											"key": "include_deleted",
											"value": "true"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Consumer Shared Resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shared-resources/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shared-resources",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get image for shared resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shared-resources/:id/images/:file_name",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shared-resources",
										":id",
										"images",
										":file_name"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "file_name",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get shared resource's network configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shared-resources/:id:network",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shared-resources",
										":id:network"
									],
									"variable": [
										{
											"key": "id:network",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Consumer Shares (cdx/v1)",
					"item": [
						{
							"name": "List of Consumer Shares",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shares?shared_resource=&include_deleted=true&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shares"
									],
									"query": [
										{
											"key": "shared_resource",
											"value": ""
										},
										{
											"key": "include_deleted",
											"value": "true"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Consumer Share",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shares/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Consumer Share",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/consumer-shares/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"consumer-shares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Shared Tokens (cdx/v1)",
					"item": [
						{
							"name": "Validate token to view shared resources",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/shared-tokens:resources",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"shared-tokens:resources"
									]
								}
							},
							"response": []
						},
						{
							"name": "Redeem token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/shared-tokens:redeem",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"shared-tokens:redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Opt Ins (cdx/v1)",
					"item": [
						{
							"name": "Read the organization's stream sharing opt-in settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/opt-in",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"opt-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set the organization's stream sharing opt-in settings",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api_version\": \"cdx/v1\",\n  \"kind\": \"OptIn\",\n  \"stream_share_enabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/cdx/v1/opt-in",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"cdx",
										"v1",
										"opt-in"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Networking (v1)",
			"item": [
				{
					"name": "Networks (networking/v1)",
					"item": [
						{
							"name": "List of Networks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/networks?spec.display_name=&spec.cloud=&spec.region=&spec.cidr=&status.phase=&environment=&connection_type=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"networks"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-gcp-us-central1,prod-aws-us-east1"
										},
										{
											"key": "spec.cloud",
											"value": "",
											"description": "GCP,AWS"
										},
										{
											"key": "spec.region",
											"value": "",
											"description": "us-central1,us-east-1"
										},
										{
											"key": "spec.cidr",
											"value": "",
											"description": "10.200.0.0/16"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "PROVISIONING,READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "connection_type",
											"value": "",
											"description": "peering,privatelink"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Network",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/networks",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"networks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Network",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/networks/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"networks",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Network",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/networks/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"networks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Network",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/networks/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"networks",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Peerings (networking/v1)",
					"item": [
						{
							"name": "List of Peerings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/peerings?spec.display_name=&status.phase=&environment=&spec.network=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"peerings"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-peering-uscentral1,prod-peering-use1"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "PROVISIONING,READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Peering",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/peerings",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"peerings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Peering",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/peerings/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"peerings",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Peering",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/peerings/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"peerings",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Peering",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/peerings/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"peerings",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Transit Gateway Attachments (networking/v1)",
					"item": [
						{
							"name": "List of Transit Gateway Attachments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/transit-gateway-attachments?spec.display_name=&status.phase=&environment=&spec.network=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"transit-gateway-attachments"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-tgw-use1,prod-tgw-usw2"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "PROVISIONING,READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Transit Gateway Attachment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/transit-gateway-attachments",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"transit-gateway-attachments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Transit Gateway Attachment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/transit-gateway-attachments/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"transit-gateway-attachments",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Transit Gateway Attachment",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/transit-gateway-attachments/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"transit-gateway-attachments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Transit Gateway Attachment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/transit-gateway-attachments/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"transit-gateway-attachments",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Private Link Accesses (networking/v1)",
					"item": [
						{
							"name": "List of Private Link Accesses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-accesses?spec.display_name=&status.phase=&environment=&spec.network=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-accesses"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-pl-use1,prod-pl-usw2"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "PROVISIONING,READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Private Link Access",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-accesses",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-accesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Private Link Access",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-accesses/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-accesses",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Private Link Access",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-accesses/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-accesses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Private Link Access",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-accesses/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-accesses",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Network Link Services (networking/v1)",
					"item": [
						{
							"name": "List of Network Link Services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-services?spec.display_name=&status.phase=&environment=&spec.network=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-services"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-net-1-nls,dev-net-1-nls"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Network Link Service",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-services",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-services"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Network Link Service",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-services/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-services",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Network Link Service",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-services/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-services",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Network Link Service",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-services/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-services",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Network Link Endpoints (networking/v1)",
					"item": [
						{
							"name": "List of Network Link Endpoints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-endpoints?spec.display_name=&status.phase=&environment=&spec.network=&spec.network_link_service=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-endpoints"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-net-1-nle,dev-net-1-nle"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "READY,PENDING_ACCEPT"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.network",
											"value": "",
											"description": "n-00000,n-00001"
										},
										{
											"key": "spec.network_link_service",
											"value": "",
											"description": "nls-abcde,nls-00000"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Network Link Endpoint",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-endpoints",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Network Link Endpoint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-endpoints/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-endpoints",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Network Link Endpoint",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-endpoints/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-endpoints",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Network Link Endpoint",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-endpoints/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-endpoints",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Network Link Service Associations (networking/v1)",
					"item": [
						{
							"name": "List of Network Link Service Associations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-service-associations?status.phase=&spec.network_link_service=&environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-service-associations"
									],
									"query": [
										{
											"key": "status.phase",
											"value": "",
											"description": "READY,PENDING_ACCEPT"
										},
										{
											"key": "spec.network_link_service",
											"value": ""
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Network Link Service Association",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/network-link-service-associations/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"network-link-service-associations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "IP Addresses (networking/v1)",
					"item": [
						{
							"name": "List of IP Addresses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/ip-addresses?cloud=&region=&services=&address_type=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"ip-addresses"
									],
									"query": [
										{
											"key": "cloud",
											"value": "",
											"description": "GCP,AWS"
										},
										{
											"key": "region",
											"value": "",
											"description": "us-central1,us-east-1"
										},
										{
											"key": "services",
											"value": "",
											"description": "KAFKA,CONNECT"
										},
										{
											"key": "address_type",
											"value": "",
											"description": "INGRESS,EGRESS"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Private Link Attachments (networking/v1)",
					"item": [
						{
							"name": "List of Private Link Attachments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachments?spec.display_name=&spec.cloud=&spec.region=&status.phase=&environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachments"
									],
									"query": [
										{
											"key": "spec.display_name",
											"value": "",
											"description": "prod-gcp-us-central1,prod-aws-useast1"
										},
										{
											"key": "spec.cloud",
											"value": "",
											"description": "GCP,AWS"
										},
										{
											"key": "spec.region",
											"value": "",
											"description": "us-central1,us-east-1"
										},
										{
											"key": "status.phase",
											"value": "",
											"description": "PROVISIONING,READY"
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Private Link Attachment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachments",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Private Link Attachment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachments/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachments",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Private Link Attachment",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachments/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Private Link Attachment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachments/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachments",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Private Link Attachment Connections (networking/v1)",
					"item": [
						{
							"name": "List of Private Link Attachment Connections",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachment-connections?environment=&spec.private_link_attachment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachment-connections"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.private_link_attachment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Private Link Attachment Connection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachment-connections",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachment-connections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Private Link Attachment Connection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachment-connections/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachment-connections",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Private Link Attachment Connection",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachment-connections/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachment-connections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Private Link Attachment Connection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/networking/v1/private-link-attachment-connections/:id?environment=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"networking",
										"v1",
										"private-link-attachment-connections",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Security Token Service (v1)",
			"item": [
				{
					"name": "OAuth Tokens (sts/v1)",
					"item": [
						{
							"name": "Exchange an OAuth Token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sts/v1/oauth2/token",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sts",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Kafka Quota (v1)",
			"item": [
				{
					"name": "Client Quotas (kafka-quotas/v1)",
					"item": [
						{
							"name": "List of Client Quotas",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/kafka-quotas/v1/client-quotas?spec.cluster=&environment=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"kafka-quotas",
										"v1",
										"client-quotas"
									],
									"query": [
										{
											"key": "spec.cluster",
											"value": ""
										},
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Client Quota",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/kafka-quotas/v1/client-quotas",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"kafka-quotas",
										"v1",
										"client-quotas"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Client Quota",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/kafka-quotas/v1/client-quotas/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"kafka-quotas",
										"v1",
										"client-quotas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Client Quota",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/kafka-quotas/v1/client-quotas/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"kafka-quotas",
										"v1",
										"client-quotas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Client Quota",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/kafka-quotas/v1/client-quotas/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"kafka-quotas",
										"v1",
										"client-quotas",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Stream Designer API (v1)",
			"item": [
				{
					"name": "Pipelines (sd/v1)",
					"item": [
						{
							"name": "List of Pipelines",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sd/v1/pipelines?environment=&spec.kafka_cluster=&page_size=100&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sd",
										"v1",
										"pipelines"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.kafka_cluster",
											"value": ""
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Pipeline",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sd/v1/pipelines",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sd",
										"v1",
										"pipelines"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Pipeline",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sd/v1/pipelines/:id?environment=&spec.kafka_cluster=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sd",
										"v1",
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.kafka_cluster",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Pipeline",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sd/v1/pipelines/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sd",
										"v1",
										"pipelines",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Pipeline",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/sd/v1/pipelines/:id?environment=&spec.kafka_cluster=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"sd",
										"v1",
										"pipelines",
										":id"
									],
									"query": [
										{
											"key": "environment",
											"value": ""
										},
										{
											"key": "spec.kafka_cluster",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Bring Your Own Key (BYOK) Management (v1)",
			"item": [
				{
					"name": "Keys (byok/v1)",
					"item": [
						{
							"name": "List of Keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/byok/v1/keys?provider=&state=&page_size=10&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"byok",
										"v1",
										"keys"
									],
									"query": [
										{
											"key": "provider",
											"value": "",
											"description": "AWS"
										},
										{
											"key": "state",
											"value": "",
											"description": "IN_USE"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Key",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/byok/v1/keys",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"byok",
										"v1",
										"keys"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read a Key",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/byok/v1/keys/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"byok",
										"v1",
										"keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Key",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/byok/v1/keys/:id",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"byok",
										"v1",
										"keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Billing API (v1)",
			"item": [
				{
					"name": "Costs (billing/v1)",
					"item": [
						{
							"name": "List of Costs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONFLUENT_CLOUD_BASE_URL}}/billing/v1/costs?start_date=&end_date=&page_size=5000&page_token=",
									"host": [
										"{{CONFLUENT_CLOUD_BASE_URL}}"
									],
									"path": [
										"billing",
										"v1",
										"costs"
									],
									"query": [
										{
											"key": "start_date",
											"value": "",
											"description": "2022-10-12"
										},
										{
											"key": "end_date",
											"value": "",
											"description": "2022-10-15"
										},
										{
											"key": "page_size",
											"value": "5000"
										},
										{
											"key": "page_token",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Metrics API (v2)",
			"item": [
				{
					"name": "List metric descriptors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}/v2/metrics/:dataset/descriptors/metrics",
							"host": [
								"{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}"
							],
							"path": [
								"v2",
								"metrics",
								":dataset",
								"descriptors",
								"metrics"
							],
							"query": [
								{
									"key": "page_size",
									"value": "100",
									"disabled": true
								},
								{
									"key": "page_token",
									"value": "",
									"disabled": true
								},
								{
									"key": "resource_type",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dataset",
									"value": "cloud",
									"description": "cloud"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List resource descriptors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}/v2/metrics/:dataset/descriptors/resources",
							"host": [
								"{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}"
							],
							"path": [
								"v2",
								"metrics",
								":dataset",
								"descriptors",
								"resources"
							],
							"query": [
								{
									"key": "page_size",
									"value": "100",
									"disabled": true
								},
								{
									"key": "page_token",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dataset",
									"value": "cloud",
									"description": "cloud"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query metric values",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"aggregations\": [\n    {\n      \"metric\": \"\"\n    }\n  ],\n  \"group_by\": [\n    \"thunder\"\n  ],\n  \"granularity\": {},\n  \"filter\": {},\n  \"order_by\": [\n    {\n      \"metric\": \"\",\n      \"agg\": {},\n      \"order\": \"DESCENDING\"\n    }\n  ],\n  \"intervals\": [\n    {}\n  ],\n  \"limit\": 100,\n  \"format\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}/v2/metrics/:dataset/query",
							"host": [
								"{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}"
							],
							"path": [
								"v2",
								"metrics",
								":dataset",
								"query"
							],
							"variable": [
								{
									"key": "dataset",
									"value": "cloud",
									"description": "cloud"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Export metric values",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}/v2/metrics/:dataset/export",
							"host": [
								"{{CONFLUENT_CLOUD_METRICS_API_ENDPOINT}}"
							],
							"path": [
								"v2",
								"metrics",
								":dataset",
								"export"
							],
							"query": [
								{
									"key": "resource.kafka.id",
									"value": "",
									"disabled": true
								},
								{
									"key": "resource.connector.id",
									"value": "",
									"disabled": true
								},
								{
									"key": "resource.custom_connector.id",
									"value": "",
									"disabled": true
								},
								{
									"key": "resource.ksql.id",
									"value": "",
									"disabled": true
								},
								{
									"key": "resource.schema_registry.id",
									"value": "",
									"disabled": true
								},
								{
									"key": "metric",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dataset",
									"value": "cloud",
									"description": "cloud"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query label values",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metric\": \"thunder\",\n  \"group_by\": [\n    \"thunder\"\n  ],\n  \"filter\": {},\n  \"intervals\": [\n    {}\n  ],\n  \"limit\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "v2/metrics/:dataset/attributes?page_token=",
							"host": [
								"v2"
							],
							"path": [
								"metrics",
								":dataset",
								"attributes"
							],
							"query": [
								{
									"key": "page_token",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "dataset",
									"value": "cloud",
									"description": "cloud"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{CONFLUENT_CLOUD_API_SECRET}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{CONFLUENT_CLOUD_API_KEY}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CONFLUENT_CLOUD_BASE_URL",
			"value": "https://api.confluent.cloud",
			"type": "string"
		},
		{
			"key": "CONFLUENT_CLOUD_METRICS_API_ENDPOINT",
			"value": "https://api.telemetry.confluent.cloud",
			"type": "string"
		}
	]
}